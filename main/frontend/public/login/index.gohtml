{{define "title"}}ComicCollector{{end}}

<html lang="en" data-bs-theme="dark">
{{template "head"}}

{{/*{{define "content"}}*/}}
{{/*    {{template "topdoc"}}*/}}
{{/*    <p>ComicCollector Login</p>*/}}
{{/*    {{template "botdoc"}}*/}}
{{/*{{end}}*/}}

{{template "content"}}

<div class="login-container">
    <div id="app">
        <form @submit.prevent="login">
            <div>
                <label for="username">Username:</label>
                <input type="text" id="username" v-model="username" required>
            </div>
            <div>
                <label for="password">Password:</label>
                <input type="password" id="password" v-model="password" required>
            </div>
            <div v-if="error" id="error-message" style="color: red;">
                ${ error }
            </div>
            <button type="submit">Login</button>
        </form>
    </div>

    <script>
        var app = Vue.createApp({
            delimiters: ['${', '}'],
            data: () => ({
                username: "",
                password: "",
                error: "",
            }),
            methods: {
                async login() {
                    this.error = '';
                    try {
                        const response = await fetch('/api/v1/login', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/x-www-form-urlencoded'
                            },
                            body: new URLSearchParams({
                                username: this.username,
                                password: this.password
                            })
                        });

                        if (response.status === 302 || response.status === 303) {
                            window.location.href = response.headers.get('Location');
                        }
                        else if (response.ok) {
                            window.location.href = response.url;
                        } else {
                            const result = await response.json();
                            this.error = result.msg;
                        }
                    } catch (error) {
                        this.error = 'An unexpected error occurred.';
                    }
                }
            }
        }).mount("#app")
    </script>
</div>
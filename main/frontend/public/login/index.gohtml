<!DOCTYPE html>
{{define "title"}}ComicCollector{{end}}

<html lang="en" data-bs-theme="dark">
    {{template "head"}}

    <div class="vh-100 d-flex justify-content-center align-items-center">
        <div class="border border-white w-50 h-50">
            <div id="login" class="d-flex justify-content-center align-items-center flex-column w-100 h-100">
                <h1 class="text-white">Login</h1>
                <div class="form-floating mb-2 w-50">
                    <input v-model="username" type="text" class="form-control" id="floatingInput"
                           placeholder="MindCollaps">
                    <label for="floatingInput">Username</label>
                </div>
                <div class="mb-3 form-floating w-50">
                    <input v-model="password" type="password" class="form-control" id="floatingPassword"
                           placeholder="Password" @keyup.enter="login()">
                    <label for="floatingPassword">Password</label>
                </div>
                <div class="mb-3 d-flex justify-content-center">
                    <button @click="login()" class="btn btn-primary align-center">Submit</button>
                </div>
            </div>
        </div>
    </div>

    </div>

        <script>
            var login = Vue.createApp({
                delimiters: ['${', '}'],
                data: () => ({
                    username: "",
                    password: "",
                    error: "",
                }),
                methods: {
                    async login() {
                        this.error = '';
                        try {
                            const response = await fetch('/api/v1/login', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/x-www-form-urlencoded'
                                },
                                body: new URLSearchParams({
                                    username: this.username,
                                    password: this.password
                                })
                            });

                            if (response.status === 302 || response.status === 303) {
                                window.location.href = response.headers.get('Location');
                            }
                            else if (response.ok) {
                                window.location.href = response.url;
                            } else {
                                const result = await response.json();
                                this.error = result.msg;
                            }
                        } catch (error) {
                            this.error = 'An unexpected error occurred.';
                        }
                    }
                }
            }).mount("#app")
        </script>
    </body>
</html>